machine:
  services:
    - docker
dependencies:
  pre:
    - sudo apt-get update; sudo apt-get install bzr
    - mkdir -p $HOME/.go_project/src/github.com/$CIRCLE_PROJECT_USERNAME
    - ln -fs $HOME/$CIRCLE_PROJECT_REPONAME $HOME/.go_project/src/github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
    - |
      echo 'export GOPATH=${HOME}/.go_workspace:${PROJECT_GOPATH}' >> ~/.circlerc
    - go get github.com/axw/gocov/gocov; go get github.com/matm/gocov-html; go get -u github.com/jstemmer/go-junit-report
    - go get -u github.com/kardianos/govendor
    - govendor sync:
        pwd:
          ../.go_project/src/github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
test:
  pre:
    - go get github.com/mattn/goveralls
  override:
    - mkdir -p $CIRCLE_TEST_REPORTS/golang
    - go test -race -v ./... | go-junit-report > $CIRCLE_TEST_REPORTS/golang/junit.xml
    - go list ./... | grep -v vendor |awk -F/ '{print $4}' | xargs -I {} go test -v -cover -race -coverprofile=$CIRCLE_ARTIFACTS/test{}.out ./{}
    - cd $CIRCLE_ARTIFACTS && sed -i '1d' test*.out
    - |
      echo "mode: atomic" > $CIRCLE_ARTIFACTS/overall-coverage.result
    - cd $CIRCLE_ARTIFACTS && cat *.out >> overall-coverage.result
  post:
    - goveralls -coverprofile=$CIRCLE_ARTIFACTS/overall-coverage.result -service=circle-ci -repotoken=$COVERALLS_TOKEN
    - bash <(curl -s https://codecov.io/bash)
